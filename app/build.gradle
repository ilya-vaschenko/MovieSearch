plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'

}
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
android {
    compileSdk 30

    signingConfigs {
        release {
            Properties properties = new Properties()
            properties.load (rootProject.file("apikey.properties").newDataInputStream())
            // def password  = properties.getProperty("key")
            def password = "qwerty"

            storeFile file("keystore.jks")
            storePassword 'qwerty'
            keyAlias 'key'
            keyPassword = password
        }
    }


    defaultConfig {
        applicationId "com.example.moviesearch"
        minSdk 24
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            minifyEnabled false
            versionNameSuffix '-debug'
            buildConfigField "String" , "TYPE", '"DEBUG"'

        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            versionNameSuffix '-relese'
            buildConfigField "String" , "TYPE", '"RELEASE"'

        }

        staging{
            initWith debug
            versionNameSuffix '-staging'
            buildConfigField "String" , "TYPE", '"STAGING"'
            debuggable false
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    flavorDimensions 'version'
    productFlavors {
        free {
            dimension 'version'
            versionNameSuffix '.free'
        }
        paid {
            dimension 'version'
            versionNameSuffix '.paid'
        }
    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def apiKey = properties.getProperty("film_api_key", "")
        it.buildConfigField "String", "FILM_API_KEY", apiKey
    }
}

dependencies {

    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.0'
    implementation 'com.google.firebase:firebase-core:20.0.0'

    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'com.google.android.gms:play-services-maps:18.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "com.google.code.gson:gson:2.8.6"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    implementation 'io.coil-kt:coil:1.4.0'

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    implementation 'io.insert-koin:koin-android:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Room
    implementation 'androidx.room:room-runtime:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'
}
apply plugin: 'com.google.gms.google-services'